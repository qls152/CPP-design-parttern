## 说明：

在装饰者设计模式中，Head_First书中实现的代码转换成C++；

## 实现说明：

在JAVA中可以增加一个ContimentDecorator接口类，但在C++也需要增加类，这是为了以后
增加新功能需要；

在该次C++实现中，为了保持与JAVA的一次性，没有使用智能指针，其实使用智能指针更好，但
形式上会与书本有所出入

## 装饰者模式定义：

动态的将责任附加到对象身上，若要扩展功能，装饰者提供了比继承更有弹性的替代方案

## 设计原则：

关闭-开放原则：类应该对外扩展，对修改关闭